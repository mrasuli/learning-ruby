With && both comparisons on the left and right must evaluate to true 
for the entire statement to return true. 
If the left side does not return true it will not bother trying the right side

With || either the right or left side must evaluate to true. 
If the left side evaluates to true, the right side will not be tried 
because it has met the condition of one side being true.


With ! you reverse the result. 
If you’re false you’re now true. 
if you’re true you’re now false! Just think of it as opposite day!

Recall that we have the boolean operators
 and (&&) and or (||) in Ruby. 
The && operator only returns true when the expressions
 on both sides of the operator are true; || returns true 
when one or the other or both of the expressions involved 
are true.
